<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this file,
   - You can obtain one at http://mozilla.org/MPL/2.0/. -->
<!DOCTYPE html>
<html platform="win" dir="ltr" lang="es-MX"><head>
  <title id="reader-title">Audio Steganography : The art of hiding secrets within earshot (part 2 of 2) | by Sumit Kumar Arora | Medium</title>
  <meta http-equiv="Content-Security-Policy" content="default-src chrome:; img-src data: *; media-src *; object-src 'none'">
  <meta content="text/html; charset=UTF-8" http-equiv="content-type">
  <meta name="viewport" content="width=device-width; user-scalable=0">
  <link rel="stylesheet" href="chrome://global/skin/aboutReader.css" type="text/css">
  <link rel="stylesheet" href="chrome://global/skin/aboutReaderPocket.css" type="text/css">
  <link rel="localization" href="toolkit/about/aboutReader.ftl">
  <link rel="localization" href="browser/branding/brandings.ftl">
<link rel="stylesheet" href="chrome://global/skin/narrate.css"><link rel="shortcut icon" href="https://miro.medium.com/v2/1*m-R_BkNf1Qjr1YbyOIJY2w.png"></head>

<body class="dark sans-serif loaded" style="--font-size: 20px; --content-width: 30em;">
  <div class="top-anchor"></div>

  <div id="toolbar" class="toolbar-container">
    <div class="toolbar reader-toolbar">
      <div class="reader-controls" articledir="ltr">
        <button class="close-button toolbar-button" aria-labelledby="toolbar-close" data-telemetry-id="reader-close">
          <span class="hover-label" id="toolbar-close" data-l10n-id="about-reader-toolbar-close">Cerrar vista de lectura</span>
        </button>
        <ul class="dropdown style-dropdown">
          <li>
            <button class="dropdown-toggle toolbar-button style-button" aria-labelledby="toolbar-type-controls" data-telemetry-id="reader-type-controls">
              <span class="hover-label" id="toolbar-type-controls" data-l10n-id="about-reader-toolbar-type-controls">Controles de letra</span>
            </button>
          </li>
          <li class="dropdown-popup">
            <div class="dropdown-arrow"></div>
            <div class="font-type-buttons radiorow"><input id="radio-itemsans-serif-button" type="radio" class="radio-button" name="font-type" checked="checked"><label for="radio-itemsans-serif-button" class="sans-serif-button" data-l10n-id="about-reader-font-type-sans-serif" checked="true">Sans-serif</label><input id="radio-itemserif-button" type="radio" class="radio-button" name="font-type"><label for="radio-itemserif-button" class="serif-button" data-l10n-id="about-reader-font-type-serif">Serif</label></div>
            <div class="font-size-buttons buttonrow">
              <button class="minus-button" data-l10n-id="about-reader-toolbar-minus" title="Disminuir tamaño de fuente"></button>
              <span class="font-size-value">5</span>
              <button class="plus-button" data-l10n-id="about-reader-toolbar-plus" title="Aumentar tamaño de fuente"></button>
            </div>
            <div class="content-width-buttons buttonrow">
               <button class="content-width-minus-button" data-l10n-id="about-reader-toolbar-contentwidthminus" title="Reducir anchura del contenido"></button>
               <span class="content-width-value">3</span>
               <button class="content-width-plus-button" data-l10n-id="about-reader-toolbar-contentwidthplus" title="Aumentar anchura del contenido"></button>
            </div>
            <div class="line-height-buttons buttonrow">
                <button class="line-height-minus-button" data-l10n-id="about-reader-toolbar-lineheightminus" title="Reducir interlineado"></button>
                <span class="line-height-value">4</span>
                <button class="line-height-plus-button" data-l10n-id="about-reader-toolbar-lineheightplus" title="Aumentar interlineado"></button>
            </div>
            <div class="color-scheme-buttons radiorow"><input id="radio-itemlight-button" type="radio" class="radio-button" name="color-scheme"><label for="radio-itemlight-button" class="light-button" data-l10n-id="about-reader-color-scheme-light" title="Esquema de color claro">Claro</label><input id="radio-itemdark-button" type="radio" class="radio-button" name="color-scheme"><label for="radio-itemdark-button" class="dark-button" data-l10n-id="about-reader-color-scheme-dark" title="Esquema de color oscuro">Oscuro</label><input id="radio-itemsepia-button" type="radio" class="radio-button" name="color-scheme"><label for="radio-itemsepia-button" class="sepia-button" data-l10n-id="about-reader-color-scheme-sepia" title="Esquema de color sepia">Sepia</label><input id="radio-itemauto-button" type="radio" class="radio-button" name="color-scheme" checked="checked"><label for="radio-itemauto-button" class="auto-button" data-l10n-id="about-reader-color-scheme-auto" checked="true" title="Esquema de color automático">Auto</label></div>
          </li>
        </ul>
      <ul class="dropdown narrate-dropdown"><li><button class="dropdown-toggle toolbar-button narrate-toggle" data-telemetry-id="reader-listen" aria-label="Escuchar (N)"><span class="hover-label">Escuchar (N)</span></button></li><li class="dropdown-popup"><div class="narrate-row narrate-control"><button class="narrate-skip-previous" disabled="disabled" title="Atrás"></button><button class="narrate-start-stop" title="Inicio (N)"></button><button class="narrate-skip-next" disabled="disabled" title="Adelante"></button></div><div class="narrate-row narrate-rate"><input class="narrate-rate-input" value="0" step="5" max="100" min="-100" type="range" title="Velocidad"></div><div class="narrate-row narrate-voices"><div class="voiceselect voice-select"><button class="select-toggle" aria-controls="voice-options">
      <span class="label">Voz:</span> <span class="current-voice">Predeterminado</span>
    </button>
    <div class="options" id="voice-options" role="listbox"><button data-value="automatic" class="option selected" tabindex="-1" role="option" aria-selected="true">Predeterminado</button><button data-value="urn:moz-tts:sapi:Microsoft David - English (United States)?en-US" class="option" tabindex="-1" role="option">Microsoft David - English (United States)</button><button data-value="urn:moz-tts:sapi:Microsoft David Desktop - English (United States)?en-US" class="option" tabindex="-1" role="option">Microsoft David Desktop - English (United States)</button><button data-value="urn:moz-tts:sapi:Microsoft Mark - English (United States)?en-US" class="option" tabindex="-1" role="option">Microsoft Mark - English (United States)</button><button data-value="urn:moz-tts:sapi:Microsoft Zira - English (United States)?en-US" class="option" tabindex="-1" role="option">Microsoft Zira - English (United States)</button><button data-value="urn:moz-tts:sapi:Microsoft Zira Desktop - English (United States)?en-US" class="option" tabindex="-1" role="option">Microsoft Zira Desktop - English (United States)</button></div></div></div><div class="dropdown-arrow"></div></li></ul><button data-buttonid="pocket-button" data-telemetry-id="reader-save-to-pocket" class="toolbar-button pocket-button" aria-labelledby="label-pocket-button" style="background-image: url(&quot;chrome://global/skin/icons/pocket.svg&quot;);"><span class="hover-label" id="label-pocket-button" data-l10n-id="about-reader-toolbar-savetopocket">Guardar en Pocket</span></button></div>
    </div>
  </div>

  <div class="container" style="--line-height: 1.6em;" dir="ltr" lang="en">
    <div class="header reader-header reader-show-element">
      <a class="domain reader-domain" href="https://sumit-arora.medium.com/audio-steganography-the-art-of-hiding-secrets-within-earshot-part-2-of-2-c76b1be719b3">sumit-arora.medium.com</a>
      <div class="domain-border"></div>
      <h1 class="reader-title">Audio Steganography : The art of hiding secrets within earshot (part 2 of 2)</h1>
      <div class="credits reader-credits">Sumit Kumar Arora</div>
      <div class="meta-data">
        <div class="reader-estimated-time" data-l10n-args="{&quot;range&quot;:&quot;11–13&quot;,&quot;rangePlural&quot;:&quot;other&quot;}" data-l10n-id="about-reader-estimated-read-time" dir="ltr">11–13 minutos</div>
      </div>
    </div>

    <hr>

    <div class="content">
      <div class="moz-reader-content reader-show-element"><div id="readability-page-1" class="page"><div><div><p id="f17b" data-selectable-paragraph="">In
 the previous installment of this piece on Audio Steganography, I 
described the fundamentals of Audio Steganography along with some 
applications and related concepts. If you haven’t yet read the earlier 
post, I recommend reading it before going further with this post.</p><h2 id="f755" data-selectable-paragraph="">Audio Steganography Methods</h2><p id="f1e6" data-selectable-paragraph="">In
 this article, we will take a look at some of the popular methods to 
embed “secret” text, images and audios inside a “public” sound file. Our
 purpose is to enable a sender to secretly send their data, hidden 
within a song.</p><p id="32fd" data-selectable-paragraph=""><strong>LSB (Least Significant Bit) Algorithm</strong></p><p id="2118" data-selectable-paragraph="">LSB
 algorithm is a classic Steganography method used to conceal the 
existence of secret data inside a “public” cover. The LSB or “Least 
Significant Bit”, in computing terms, represents the bit at the unit’s 
place in the binary representation of a number.</p><p id="1b60" data-selectable-paragraph="">For example, we can represent the decimal number 170 in binary notation as 10101010 (we assume <a href="https://en.wikipedia.org/wiki/Endianness" rel="noopener ugc nofollow" target="_blank">little-endian machine</a>
 with address starting from the right and increasing towards left). As 
shown in the figure, the least significant bit, in this case, is 0.</p><figure><div><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%20yuyri9si6XBK5-2UVEXm-w.png" class="moz-reader-block-img" width="241" height="31"></picture></div></figure><p id="9ea3" data-selectable-paragraph="">In
 the simplistic form, LSB algorithm replaces the LSB of each byte in the
 “carrier” data with one bit from the “secret” message. This concept is 
visualized in the diagram below.</p><figure><div role="button" tabindex="0"><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%20THFuhBPeMI5lE4JiLcF-OQ.png" class="moz-reader-block-img" moz-reader-center="true" width="700" height="221"></picture></div></figure><p id="45c4" data-selectable-paragraph="">The
 sender performs “embedding” of the bits of secret messages onto the 
carrier data byte-by-byte. Whereas the receiver performs the 
“extraction” procedure by reading LSB bits of each byte of received 
data, this way the receiver reconstructs the secret message.</p><figure><div role="button" tabindex="0"><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%207ElCrXNicOSyqXdD9XMy3w.png" class="moz-reader-block-img" moz-reader-center="true" width="700" height="258"></picture></div></figure><p id="5a52" data-selectable-paragraph=""><strong>Isn’t this corrupting the carrier signal?</strong></p><p id="b725" data-selectable-paragraph="">Yes,
 but the main idea here is that we are trying to exploit the human 
perception of the integrity of the carrier signal. LSB steganography is 
very popular for Image Steganography, i.e. hiding secrets in images. And
 the change in LSB affects the color just so slightly that the change in
 color is not generally perceptible to the human eye. However, the human
 ear is more sensitive to slights changes in sound and hence the “noise”
 that we are adding would have a higher chance of being noticed. To 
overcome this problem of this trivial form of LSB algorithm, many 
researchers have suggested variants that increase robustness in the 
audio domain.</p></div><div><p id="3dc4" data-selectable-paragraph=""><strong>LSB algorithm implementation in Python</strong></p><p id="8f22" data-selectable-paragraph="">Let’s
 implement this method with some sound data as our carrier signal that 
would carry our secret text. As our sound data, I am taking a sample 
from a <a href="https://nucleya.bandcamp.com/track/aaja-feat-avneet-khurmi-guri-gangsta" rel="noopener ugc nofollow" target="_blank">song</a> by Indian electronic music producer Udyan Sagar’s (better known as <a href="https://en.wikipedia.org/wiki/Nucleya" rel="noopener ugc nofollow" target="_blank">Nucleya</a>). This song will be the carrier of our secret text message, “Peter Parker is the Spiderman!”.</p><figure><figcaption>Please extend your support to the artist <a href="https://nucleya.bandcamp.com/" rel="noopener ugc nofollow" target="_blank">here</a>.</figcaption></figure><p id="65da" data-selectable-paragraph="">The
 underlying bit manipulation in LSB is pretty straightforward. We will 
perform logical AND operation between each byte of carrier audio (the 
“song”) and a bit mask that resets the LSB of carrier byte.</p><figure><div role="button" tabindex="0"><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%20bb_rTu8JtQNMxc4XBAGPnA.png" class="moz-reader-block-img" moz-reader-center="true" width="700" height="257"></picture></div></figure><p id="3e02" data-selectable-paragraph="">Then
 we will perform a simple logical OR operation between the modified 
carrier byte and the next bit (0 or 1) from the secret message.</p><figure><div role="button" tabindex="0"><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%20FsLKSuLm4qy0eVcDggGJWg.png" class="moz-reader-block-img" moz-reader-center="true" width="700" height="220"></picture></div></figure><p id="a78e" data-selectable-paragraph="">We
 will use .wav audio file format for our carrier song. Wave is one of 
the most popular lossless compression format. Python has a native 
library called “wave” that provides us basic tools to manipulate audio 
data.</p><p id="019e" data-selectable-paragraph="">Below code is used by
 the sender to embed the secret text message. The code is sufficiently 
commented to explain the process step-by-step.</p><figure></figure><p id="ddd3" data-selectable-paragraph="">As
 the output of the above code, we get the below audio file that has the 
secret text embedded in it. There is some noticeable noise in this audio
 file. As an experiment, you could try and embed every 2nd or 3rd byte 
of carrier audio with one bit from the secret, and see if that fetches a
 more robust result.</p><figure></figure><p id="f630" data-selectable-paragraph="">To extract the secret from this audio, the receiver shall run the below Python code.</p><figure></figure><figure></figure><figure><div role="button" tabindex="0"><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%20eoXn3k2dG-Uy1srChlei2A.png" class="moz-reader-block-img" moz-reader-center="true" width="700" height="36"></picture></div></figure><p id="e2be" data-selectable-paragraph="">Among
 other popular techniques for Audio Steganography are Phase Coding, Echo
 Hiding, and Spread Spectrum. These classic techniques do not induce 
noise in the carrier signal and hence are more robust methods for 
achieving Steganography. I encourage you to read related literature if 
you want to study them in more details or let me know in the comments if
 you would like me to write on these methods.</p></div><div><p id="c90c" data-selectable-paragraph=""><strong>A note on SSTV</strong></p><p id="ae72" data-selectable-paragraph="">As
 you can image, we can embed any text, document, audio, video within the
 carrier audio by simply encoding bits of the secret data within each 
byte of carrier audio. However, the carrier message has to have enough 
data bytes so as to carry all the bits of the secret message. In the 
next section, we will take a look at a frequency modulation based method
 to hide secret data in the inaudible frequency range. But before that I
 would like to talk about a method that you can use to encode your image
 data to audio and then use the Steganography method described in the 
next section to embed and extract the image from the carrier audio.</p><p id="d74e" data-selectable-paragraph=""><a href="https://en.wikipedia.org/wiki/Slow-scan_television" rel="noopener ugc nofollow" target="_blank">SSTV</a>
 is an acronym for Slow-Scan Television, which is a very popular method 
in radio transmission to send image data over a long distance via 
ionoshperic propagation. SSTV enables transmission of images in places 
where very little bandwidth is available, for example, over the Plain 
Old Telephone Service(POTS) line. In fact, Apollo 11 moon mission had 
used SSTV to transmit images back to earth.</p><p id="ad72" data-selectable-paragraph="">SSTV
 is based on analog frequency modulation, that looks at the brightness 
of each pixel and the accordingly allocates a different audio frequency 
for it. Usually, SSTV is used to transfer greyscale images, we can also 
use it to transfer colored images with some loss in image resolution.</p><p id="f7cf" data-selectable-paragraph="">Amateur-Radio wiki has a <a href="http://www.amateur-radio-wiki.net/index.php?title=SSTV_software" rel="noopener ugc nofollow" target="_blank">list of some of the available SSTV software</a> on different platforms. <a href="mailto:vsza@vsza.hu" rel="noopener ugc nofollow" target="_blank">András Szentkirályi</a> has made a Python package called <a href="https://github.com/dnet/pySSTV" rel="noopener ugc nofollow" target="_blank">PySSTV</a> that generates SSTV modulated wave file for image files. You can use pip to install this package.</p><pre><span id="8848" data-selectable-paragraph="">pip install pysstv </span></pre><p id="409c" data-selectable-paragraph="">After
 installing the package, you can run below command to convert an image 
file (image.jpg) to SSTV modulated audio (audio.wav) file.</p><pre><span id="a86f" data-selectable-paragraph="">python -m pysstv /path/to/image.jpg /path/to/audio.wav</span></pre><p id="6a45" data-selectable-paragraph="">This
 package also has the implementation for different SSTV modes including 
the popular Martin, Robot, and Scottie. You can specify the modes and 
other parameters while converting the image.</p><p id="ba2d" data-selectable-paragraph="">Now
 you can play this audio on your computer using any media player and 
that is all you need to do at the sender end. To receive this audio, I 
would recommend installing some application on your mobile phone that 
can extract the image back by listening to our “audio.wav” through the 
phone’s mic. One such Android app is the Robot36 on play store.</p><p id="22da" data-selectable-paragraph="">As an example, I encoded below image using PySSTV and got the given encoded audio.</p><figure><div><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%209xEWBieDSi2U2oL1a6Z9ZA.png" class="moz-reader-block-img" width="320" height="256"></picture></div><figcaption data-selectable-paragraph="">“secret” image</figcaption></figure><figure><figcaption>image converted to SSTV audio</figcaption></figure><p id="606a" data-selectable-paragraph="">The
 resulting audio is not pleasant on the ear, but you can modulate it to 
the inaudible range and have it transferred covertly within a “public” 
audio.</p><p id="a795" data-selectable-paragraph="">In the below video I have given a demonstration of encoding and decoding an image by transferring it as SSTV modulated audio.</p><p id="6b13" data-selectable-paragraph="">[Video to be added soon.]</p></div><div><p id="6b00" data-selectable-paragraph=""><strong>Frequency Modulation based Steganography</strong></p><p id="e881" data-selectable-paragraph="">The
 Frequency-modulation based method that we are going to discuss here is 
very powerful and doesn’t induce noise in the carrier signal. Using this
 method we will embed one “secret” audio onto another “public” audio. 
The secret audio shall be imperceptible to the human ear and the 
receiver would be able to extract the secret audio at their end.</p><p id="af9c" data-selectable-paragraph="">The
 main idea of this algorithm is that we will conceal our secret audio in
 the near-ultrasound range while keeping our public audio data in the 
normal hearing range. As explained in <a href="https://medium.com/@sumit.arora/audio-steganography-the-art-of-hiding-secrets-within-earshot-part-1-of-2-6a3bbd706e15" rel="noopener">the previous installment</a>
 of this post, the near-ultrasound audio will be inaudible to most 
humans above a certain age. You can decide what frequency modulation 
frequency to use, based on the age and even gender of your target.</p><p id="6d09" data-selectable-paragraph="">To modulate the secret audio onto the inaudible range, we will use the method described by Lowery Oliver M, in below patent.</p><p id="7c9f" data-selectable-paragraph="">We
 will use near-ultrasound frequencies to encode the secret rather than 
infrasounds because as we saw in the last post, long exposure to 
infrasounds <a href="http://www.sciencemag.org/news/2014/09/sounds-you-cant-hear-can-still-hurt-your-ears" rel="noopener ugc nofollow" target="_blank">can be harmful</a>, whereas there is <a href="http://randombio.com/ultrasound.html" rel="noopener ugc nofollow" target="_blank">no scientific evidence</a> of any harm being induced to human ear by small exposure to near-hypersounds.</p><p id="d17a" data-selectable-paragraph="">We
 can use the method described above to make a demonstration on a regular
 sound card present on most computers with support for 44.1 kHz sampling
 rate. Audacity user, <a href="https://forum.audacityteam.org/memberlist.php?mode=viewprofile&amp;u=5642" rel="noopener ugc nofollow" target="_blank">edgar-rft</a>, has provided one implementation of the method in above patent in <a href="http://www.cs.cmu.edu/afs/cs.cmu.edu/project/music/web/music.software.html" rel="noopener ugc nofollow" target="_blank">Nyquist programming language</a>. This code sample can directly be imported in Audacity as a <a href="http://www.cs.cmu.edu/afs/cs.cmu.edu/project/music/web/music.software.html" rel="noopener ugc nofollow" target="_blank">Nyquist plugin</a>.</p><figure></figure><p id="5c9f" data-selectable-paragraph=""><strong>Points to note:</strong></p><ul><li id="4c8d" data-selectable-paragraph="">This plugin produces a single-side-band modulated signal with a suppressed carrier.</li><li id="2758" data-selectable-paragraph="">The
 sample rate must be more than double the frequency of the modulation 
carrier frequency. So, for example, if you wish to use a carrier 
frequency of 17500 Hz, then the sample rate of the secret audio must be 
more than 35000 Hz. You can use the “Tracks menu &gt; Resample” option 
in Audacity, if this condition is not satisfied for your secret audio.</li><li id="8835" data-selectable-paragraph="">Most
 of the speakers and headphones reliably transmit audio up to 20,000 Hz.
 This is one reason why in my example, I will use a near-ultrasound 
carrier frequency range (17.5 kHz).</li><li id="6f72" data-selectable-paragraph="">Make
 sure that when you export the processed audio, the sampling rate in 
“Project rate” is more than double the carrier frequency.</li></ul><p id="1cf7" data-selectable-paragraph="">For this demonstration, let’s assume that we want to transfer the same <a href="https://nucleya.bandcamp.com/track/aaja-feat-avneet-khurmi-guri-gangsta" rel="noopener ugc nofollow" target="_blank">song</a> by the artist Nucleya, that we used in the earlier example. This will be our “secret” audio.</p><figure></figure><p id="f5e3" data-selectable-paragraph="">Frequency distribution for our secret audio shows that the data is well spread in the spectrum.</p><figure><div><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%20vOC5eJhYCu7VSCoq9xWaCA.png" class="moz-reader-block-img" width="597" height="522"></picture></div></figure><p id="24e9" data-selectable-paragraph="">We will hide this audio within the below music by <a href="http://ww12.theindianjamproject.com/" rel="noopener ugc nofollow" target="_blank">The Indian Jam Project</a>. This music is their <a href="https://www.youtube.com/watch?v=TKILNbrWxBQ" rel="noopener ugc nofollow" target="_blank">rendition of the Interstellar theme</a> music. This will be the “public” cover for our secret audio.</p><figure><figcaption>Please extend your support to the artist <a href="https://www.youtube.com/channel/UCbpLD76CnWWZ-JqZ9LjR2Mw" rel="noopener ugc nofollow" target="_blank">here</a>.</figcaption></figure><p id="13c3" data-selectable-paragraph="">This is what frequency distribution for public audio looks like.</p><figure><div><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%20MVKCdisE35yNW84flp40ow.png" class="moz-reader-block-img" width="598" height="524"></picture></div></figure><p id="d4b5" data-selectable-paragraph="">Next,
 we use the above Nyquist code to convert our secret to a subliminal 
audio. Here I am using the carrier frequency of 17500 Hz. You can use a 
different level as per your requirement and capability of the sound 
card. The output audio confirms that the secret is inaudible (it may 
still be <a href="https://medium.com/@sumit.arora/audio-steganography-the-art-of-hiding-secrets-within-earshot-part-1-of-2-6a3bbd706e15" rel="noopener">audible to young people</a> who have healthy hearing range).</p><figure></figure><p id="036c" data-selectable-paragraph="">Frequency distribution for the subliminal confirms the modulation.</p><figure><div><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%200I9ePPVT1LlpEVwclZaS8w.png" class="moz-reader-block-img" width="600" height="526"></picture></div></figure><p id="b180" data-selectable-paragraph="">Next,
 we mix the public audio and modulated secret audio to create a mixed 
output that has our secret in the audible range. This embedded audio 
file shall be sent to the intended receiver.</p><figure></figure><p id="aed1" data-selectable-paragraph="">The frequency distribution for the mixture looks great.</p><figure><div><picture><source type="image/webp"><source data-testid="og"><img alt="" role="presentation" src="Audio%20Steganography%20The%20art%20of%20hiding%20secrets%20within%20earshot%20(part%202%20of%202)%20by%20Sumit%20Kumar%20Arora%20Medium%20Archivos/1%20AGrY7Aona2e75cCTemqccQ.png" class="moz-reader-block-img" width="594" height="525"></picture></div></figure><p id="9f53" data-selectable-paragraph="">At the receiver end simply run below code to extract the original secret.</p><figure></figure><p id="9ec5" data-selectable-paragraph="">Below is the extracted secret audio data.</p><figure></figure><p id="4e8a" data-selectable-paragraph="">The
 sound quality is a bit poor, because for a sample rate of 44100 Hz and a
 carrier frequency of 17500 Hz, the audio bandwidth is less than 4500 
Hz, which is not enough for high-quality audio. Hence, you should expect
 some distorted speech signal, because there is not much “room” for 
sound quality in the range between 17500 and 22050 Hertz on a soundcard 
with only 44100 Hertz sample frequency. I encourage you to repeat this 
experiment with higher range for carrier frequency if you have a better 
sound card at your disposal.</p></div><p id="b0d5" data-selectable-paragraph="">That’s
 all from my side for this post on Audio Steganography. I hope you 
enjoyed learning about this cool concept, and I would love to hear your 
feedback in the comment section below.</p></div></div></div>
    </div>

    <div>
      <div class="reader-message"></div>
    </div>
    <div aria-owns="toolbar"></div>
  </div>

  <div id="pocket-cta-container" hidden="">
    <div class="pocket-cta-inner" id="pocket-cta-only">
      <div class="pocket-cta">
        <header class="pocket-cta-header">Save anything from across the web in Pocket, your personal library.</header>
        <p class="pocket-cta-subhead">As part of the Firefox family, 
Pocket provides a quiet, calm space that’s perfect for reading. It 
strips away all the distractions of the internet so you can really 
focus.</p>
        <a href="https://getpocket.com/signup?utm_source=firefox_reader&amp;utm_medium=variant_cta_only" class="pocket-btn pocket-sign-up"><strong>Sign up</strong> - it’s free</a>
        <a href="https://getpocket.com/explore?utm_source=firefox_reader&amp;utm_medium=variant_cta_only" class="pocket-btn pocket-discover-more"><strong>Discover more</strong></a>
      </div>
      <button class="pocket-dismiss-cta" title="Dismiss"></button>
    </div>

    <div class="pocket-cta-inner" id="pocket-cta-and-recs">
      <div class="pocket-recs-top">
        <div class="col">
          <header class="pocket-cta-header">Discover the most thought-provoking stories out there, curated by Pocket.</header>
          <p class="pocket-cta-subhead">As part of the Firefox family, 
Pocket surfaces the best articles out there—new perspectives, intriguing
 deep-dives, timeless classics—and we do this with the same dedication 
to privacy you’ve come to expect from Firefox and Mozilla. </p>
        </div>
        <div class="col">
          <button class="pocket-collapse-recs"></button>
        </div>
      </div>

      <div class="pocket-recs"></div>

      <div class="pocket-sign-up-wrapper">
        <a href="https://getpocket.com/explore?utm_source=firefox_reader&amp;utm_medium=variant_cta_plus_recs" class="pocket-btn pocket-sign-up"><strong>Discover more</strong></a>
      </div>
    </div>
  </div>



</body></html>